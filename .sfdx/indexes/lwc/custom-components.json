[{"_allAttributes":null,"_properties":null,"_methods":null,"file":"/Users/shwetachadha/Desktop/sfmc-devtools-copado/force-app/main/default/lwc/mcdo_ChildEnvironmentVariables/mcdo_ChildEnvironmentVariables.js","metadata":{"decorators":[{"type":"api","targets":[{"type":"property","name":"recordId","value":{"type":"unresolved"}},{"type":"property","name":"items","value":{"type":"array","value":[]}}]}],"exports":[{"type":"ExportDefaultDeclaration"}]},"updatedAt":"2023-03-23T15:14:47.822Z"},{"_allAttributes":null,"_properties":null,"_methods":null,"file":"/Users/shwetachadha/Desktop/sfmc-devtools-copado/force-app/main/default/lwc/mcdo_RetrieveTable/mcdo_RetrieveTable.js","metadata":{"decorators":[{"type":"wire","targets":[{"name":"getStateParameters","adapter":{"name":"CurrentPageReference","reference":"lightning/navigation"},"type":"method"},{"name":"_context","adapter":{"name":"MessageContext","reference":"lightning/messageService"},"type":"property"}]}],"declarationLoc":{"start":{"line":41,"column":0},"end":{"line":635,"column":1}},"classMembers":[{"type":"property","name":"currentPageReference","loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":25}}},{"type":"property","name":"userStoryId","loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}}},{"type":"method","name":"getStateParameters","loc":{"start":{"line":49,"column":4},"end":{"line":67,"column":5}},"decorator":"wire"},{"type":"property","name":"data","loc":{"start":{"line":73,"column":4},"end":{"line":73,"column":9}}},{"type":"property","name":"visibleData","loc":{"start":{"line":74,"column":4},"end":{"line":74,"column":16}}},{"type":"property","name":"columns","loc":{"start":{"line":77,"column":4},"end":{"line":140,"column":6}}},{"type":"property","name":"selectedRowIDs","loc":{"start":{"line":143,"column":4},"end":{"line":143,"column":24}}},{"type":"property","name":"selectedRowsIDsFiltered","loc":{"start":{"line":144,"column":4},"end":{"line":144,"column":33}}},{"type":"property","name":"defaultSortDirection","loc":{"start":{"line":147,"column":4},"end":{"line":147,"column":33}}},{"type":"property","name":"sortDirection","loc":{"start":{"line":148,"column":4},"end":{"line":148,"column":27}}},{"type":"property","name":"sortedBy","loc":{"start":{"line":149,"column":4},"end":{"line":149,"column":20}}},{"type":"property","name":"keyword","loc":{"start":{"line":152,"column":4},"end":{"line":152,"column":12}}},{"type":"property","name":"allSelectedRows","loc":{"start":{"line":153,"column":4},"end":{"line":153,"column":25}}},{"type":"property","name":"isLoading","loc":{"start":{"line":156,"column":4},"end":{"line":156,"column":21}}},{"type":"property","name":"showTable","loc":{"start":{"line":157,"column":4},"end":{"line":157,"column":22}}},{"type":"property","name":"refreshButtonDisabled","loc":{"start":{"line":158,"column":4},"end":{"line":158,"column":33}}},{"type":"property","name":"progressStatus","loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":36}}},{"type":"property","name":"currentResultIds","loc":{"start":{"line":160,"column":4},"end":{"line":160,"column":33}}},{"type":"property","name":"getProgressSubscription","loc":{"start":{"line":163,"column":4},"end":{"line":163,"column":33}}},{"type":"property","name":"reloadTableSubscription","loc":{"start":{"line":164,"column":4},"end":{"line":164,"column":33}}},{"type":"property","name":"resultChannelName","loc":{"start":{"line":165,"column":4},"end":{"line":165,"column":54}}},{"type":"property","name":"eventChannelName","loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":49}}},{"type":"method","name":"connectedCallback","loc":{"start":{"line":240,"column":4},"end":{"line":293,"column":5}}},{"type":"method","name":"addIdToData","loc":{"start":{"line":299,"column":4},"end":{"line":304,"column":5}},"doc":"*\n     * adds an id field to the data to track what was selected and what wasnt across filter actions or pagination\n     * @param {object} data our central list of data as retrieved from the json attached to the environment\n     * @returns {object} data with an id field added"},{"type":"method","name":"retrieve","loc":{"start":{"line":309,"column":4},"end":{"line":329,"column":5}},"doc":"*\n     * called when the Refresh-button is clicked to get new data from SFMC"},{"type":"method","name":"subscribeToCompletionEvent","loc":{"start":{"line":336,"column":4},"end":{"line":389,"column":5}},"doc":"*\n     * helper for retrieve()\n     * @param {string} jobExecutionId sfid\n     * @returns {Promise<void>} resolves when the job is done"},{"type":"method","name":"unsubscribeThisSubscription","loc":{"start":{"line":391,"column":4},"end":{"line":400,"column":5}}},{"type":"method","name":"updateMetadataGrid","loc":{"start":{"line":408,"column":4},"end":{"line":456,"column":5}},"doc":"*\n     * helper for retrieve() called when refreshing metadata is done to update the table\n     * @param {object} response empApi response\n     * @param {string} jobExecutionId sfid\n     * @returns {Promise<void>} resolves when the job is done"},{"type":"method","name":"onHandleSort","loc":{"start":{"line":462,"column":4},"end":{"line":466,"column":5}},"doc":"*\n     * called when sorting is changed by user\n     * @param {object} event LWC event object\n     * @returns {void}"},{"type":"method","name":"sortData","loc":{"start":{"line":474,"column":4},"end":{"line":495,"column":5}},"doc":"*\n     * helper for onHandleSort that does the actual sorting\n     * @param {string} fieldname this.sortedBy\n     * @param {string} direction this.sortDirection\n     * @returns {void}"},{"type":"method","name":"registerEmpErrorListener","loc":{"start":{"line":498,"column":4},"end":{"line":506,"column":5}}},{"type":"method","name":"updateSelected","loc":{"start":{"line":513,"column":4},"end":{"line":536,"column":5}},"doc":"*\n     * called when a row is selected or deselected via its checkbox\n     * @param {object} event LWC event object\n     * @returns {void}"},{"type":"method","name":"handleSearch","loc":{"start":{"line":542,"column":4},"end":{"line":573,"column":5}},"doc":"*\n     * Function that handles the search input field and the selectedRows of the table regarding the changing visible Data\n     * @param {object} event LWC event object\n     * @returns {void}"},{"type":"method","name":"handleChange","loc":{"start":{"line":580,"column":4},"end":{"line":582,"column":5}},"doc":"*\n     * General Handler for simple Inputs\n     * @param {object} event LWC event object\n     * @returns {void}"},{"type":"method","name":"showToastEvent","loc":{"start":{"line":592,"column":4},"end":{"line":600,"column":5}},"doc":"*\n     * helper to show dynamic popups for various events\n     * @param {string} title displayed as heading\n     * @param {string} message body of the message. It can contain placeholders in the form of {0} ... {N}. The placeholders are replaced with the links on messageData.\n     * @param {'info'|'success'|'warning'|'error'} [variant=info] Changes the appearance of the notice\n     * @param {'dismissible'|'pester'|'sticky'} [mode=dismissible] Determines how persistent the toast is\n     * @returns {void}"},{"type":"method","name":"showError","loc":{"start":{"line":608,"column":4},"end":{"line":610,"column":5}},"doc":"*\n     * show sticky error message\n     * @param {string} title displayed as heading\n     * @param {string} message body of the message. It can contain placeholders in the form of {0} ... {N}. The placeholders are replaced with the links on messageData.\n     * @returns {void}"},{"type":"method","name":"showSuccess","loc":{"start":{"line":617,"column":4},"end":{"line":619,"column":5}},"doc":"*\n     * show sticky error message\n     * @param {string} title displayed as heading\n     * @param {string} message body of the message. It can contain placeholders in the form of {0} ... {N}. The placeholders are replaced with the links on messageData.\n     * @returns {void}"},{"type":"method","name":"loadingState","loc":{"start":{"line":627,"column":4},"end":{"line":634,"column":5}},"doc":"*\n     * shows loading spinner and progress message or hides it again\n     * @param {boolean} isLoading shows/hides spinner\n     * @param {string} [progressStatus] sets progress message\n     * @returns {void}"}],"exports":[{"type":"ExportDefaultDeclaration"}]},"updatedAt":"2023-03-23T15:14:47.825Z"}]